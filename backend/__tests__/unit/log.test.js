
const notificationLog =  require('../../src/app/controllers/log/NotificationLogController')
const purchaseLog =  require('../../src/app/controllers/log/PurchaseLogController')
const {log} = require('../../src/app/models/')
const logtype = require('../../src/app/controllers/enum/logType')
describe('Log tests', () => {
    it('Should create notifications without errors', async (done) => {

        await notificationLog.error('Log Test','This error has been generated by log test')
        
        
        setTimeout(() => {}, 3000)

        response = await log.findOne({where:{idLogType:logtype["notification_error_500"].value}})
        expect(response.idLog).not.toBeNull();
        done()
    })
 
    it('Check if the activity notification has been created', async (done) => {

        await notificationLog.activity('Log Test','This error has been generated by log test')
        
        
        setTimeout(() => {}, 3000)

        response = await log.findOne({where:{idLogType:logtype["notification_activity"].value}})
        expect(response.idLogType).toBe(logtype["notification_activity"].value)
        done()
    })

    it('', async (done) => {

        await notificationLog.activity('Log Test','This error has been generated by log test')
        
        
        setTimeout(() => {}, 3000)

        response = await log.findOne({where:{idLogType:logtype["notification_activity"].value}})
        expect(response.idLogType).toBe(logtype["notification_activity"].value)
        done()
    })
})

describe('Payment notification test', () => {
    it('Shold create a paymant notification with success', async (done) => {

        await purchaseLog.error('Log Test','This error has been generated by log test', 7)
        
        
        setTimeout(() => {}, 3000)

        response = await log.findOne({where:{idUser:7}})
        expect(response.idLog).not.toBeNull();
        done()
    })

 })